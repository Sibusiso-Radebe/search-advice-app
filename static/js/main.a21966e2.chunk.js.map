{"version":3,"sources":["components/search-form/search-form.component.jsx","assets/images/logo.png","App.js","reportWebVitals.js","index.js"],"names":["SearchForm","onFormSubmit","onSearchValueChange","searchTermValue","onImFellingLucky","isFetchingSlips","onSubmit","className","type","placeholder","onChange","event","target","value","disabled","onClick","App","onSearchChange","setState","searchTerm","searchAdvice","queryType","slipArray","state","fetch","method","headers","Accept","then","response","json","slips","info","slip","push","message","text","onSearchSubmit","preventDefault","reset","this","map","advice","id","alt","src","Logo","renderSlips","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAyBeA,G,MAtBI,SAAC,GAAD,IAClBC,EADkB,EAClBA,aACAC,EAFkB,EAElBA,oBACAC,EAHkB,EAGlBA,gBACAC,EAJkB,EAIlBA,iBACAC,EALkB,EAKlBA,gBALkB,OAOlB,uBAAMC,SAAUL,EAAcM,UAAU,cAAxC,UACC,uBACCC,KAAK,OACLC,YAAY,wBACZC,SAAU,SAACC,GAAD,OAAWT,EAAoBS,EAAMC,OAAOC,UAEvD,gCACC,wBAAQC,UAAWX,EAAnB,oBACA,wBAAQY,QAASX,EAAkBU,SAAUT,EAA7C,uCClBY,MAA0B,iCCkH1BW,G,wDA3Gd,aAAe,IAAD,8BACb,gBAWDC,eAAiB,SAACJ,GACjB,EAAKK,SAAS,CAAEC,WAAYN,KAbf,EAgBdO,aAAe,WAEd,IAAIC,EACEC,EAAY,GAClB,EAAKJ,SAAS,CAAEb,iBAAiB,IACRgB,EAAzB,EAAKE,MAAMJ,WAA0B,WAA2B,GAEhEK,MAAM,oCAAD,OACgCH,GADhC,OAC4C,EAAKE,MAAMJ,YAC3D,CACCM,OAAQ,MACRC,QAAS,CACRC,OAAQ,sBAITC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GAMFA,EAASE,MACZ,EAAKb,SAAS,CACba,MAAOF,EAASE,MAChBC,KAAM,GACNb,WAAY,GACZd,iBAAiB,IAERwB,EAASI,MACnBX,EAAUY,KAAKL,EAASI,MAExB,EAAKf,SAAS,CACba,MAAOT,EACPU,KAAM,GACN3B,iBAAiB,KAERwB,EAASM,SACnB,EAAKjB,SAAS,CACbc,KAAMH,EAASM,QAAQC,KACvBjB,WAAY,GACZd,iBAAiB,QA1DR,EAgEdgC,eAAiB,SAAC1B,GACjBA,EAAM2B,iBACN3B,EAAMC,OAAO2B,QACb,EAAKnB,gBAjEL,EAAKG,MAAQ,CACZQ,MAAO,GACPZ,WAAY,GACZa,KAAM,GACN3B,iBAAiB,GANL,E,0DAuEb,OACC,oBAAIE,UAAU,aAAd,SACEiC,KAAKjB,MAAMQ,MAAMU,KAAI,SAACR,GAAD,OACrB,6BAAmBA,EAAKS,QAAfT,EAAKU,W,+BAMR,IAAD,EAC0BH,KAAKjB,MAA/BS,EADA,EACAA,KAAM3B,EADN,EACMA,gBAEd,OACC,sBAAKE,UAAU,MAAf,UACC,qBAAKA,UAAU,OAAOqC,IAAI,kBAAkBC,IAAKC,IAEjD,cAAC,EAAD,CACC7C,aAAcuC,KAAKH,eACnBnC,oBAAqBsC,KAAKvB,eAC1Bd,gBAAiBqC,KAAKjB,MAAMJ,WAC5Bd,gBAAiBmC,KAAKjB,MAAMlB,gBAC5BD,iBAAkBoC,KAAKpB,eAGvBf,EACA,mBAAGE,UAAU,cAAb,SAA4B,4BACzByB,EACH,mBAAGzB,UAAU,WAAb,SAAyByB,IAEzBQ,KAAKO,qB,GArGQC,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a21966e2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './search-form.styles.scss';\r\n\r\nconst SearchForm = ({\r\n\tonFormSubmit,\r\n\tonSearchValueChange,\r\n\tsearchTermValue,\r\n\tonImFellingLucky,\r\n\tisFetchingSlips,\r\n}) => (\r\n\t<form onSubmit={onFormSubmit} className=\"search-form\">\r\n\t\t<input\r\n\t\t\ttype=\"text\"\r\n\t\t\tplaceholder=\"Enter advice topic...\"\r\n\t\t\tonChange={(event) => onSearchValueChange(event.target.value)}\r\n\t\t/>\r\n\t\t<div>\r\n\t\t\t<button disabled={!searchTermValue}>Search</button>\r\n\t\t\t<button onClick={onImFellingLucky} disabled={isFetchingSlips}>\r\n\t\t\t\tI'm feeling lucky\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t</form>\r\n);\r\n\r\nexport default SearchForm;\r\n","export default __webpack_public_path__ + \"static/media/logo.c7231fa1.png\";","import React from 'react';\n\nimport SearchForm from './components/search-form/search-form.component';\nimport Logo from '../src/assets/images/logo.png';\nimport './App.scss';\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tslips: [],\n\t\t\tsearchTerm: '',\n\t\t\tinfo: '',\n\t\t\tisFetchingSlips: false,\n\t\t};\n\t}\n\n\t//get term value from searchbox and set it to state\n\n\tonSearchChange = (value) => {\n\t\tthis.setState({ searchTerm: value });\n\t};\n\n\tsearchAdvice = () => {\n\t\t//check if search term is added and ammend queryType if needed\n\t\tlet queryType;\n\t\tconst slipArray = [];\n\t\tthis.setState({ isFetchingSlips: true });\n\t\tthis.state.searchTerm ? (queryType = '/search/') : (queryType = '');\n\n\t\tfetch(\n\t\t\t`https://api.adviceslip.com/advice${queryType}${this.state.searchTerm}`,\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t},\n\t\t\t}\n\t\t)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((response) => {\n\t\t\t\t/*\n        check case of response and get objects and add/push to slips\n        array\n        */\n\n\t\t\t\tif (response.slips) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tslips: response.slips,\n\t\t\t\t\t\tinfo: '',\n\t\t\t\t\t\tsearchTerm: '',\n\t\t\t\t\t\tisFetchingSlips: false,\n\t\t\t\t\t});\n\t\t\t\t} else if (response.slip) {\n\t\t\t\t\tslipArray.push(response.slip);\n\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tslips: slipArray,\n\t\t\t\t\t\tinfo: '',\n\t\t\t\t\t\tisFetchingSlips: false,\n\t\t\t\t\t});\n\t\t\t\t} else if (response.message) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tinfo: response.message.text,\n\t\t\t\t\t\tsearchTerm: '',\n\t\t\t\t\t\tisFetchingSlips: false,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tonSearchSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tevent.target.reset();\n\t\tthis.searchAdvice();\n\t};\n\n\trenderSlips() {\n\t\treturn (\n\t\t\t<ul className=\"slips-list\">\n\t\t\t\t{this.state.slips.map((slip) => (\n\t\t\t\t\t<li key={slip.id}>{slip.advice}</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst { info, isFetchingSlips } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<img className=\"logo\" alt=\"Get-advice-logo\" src={Logo} />\n\n\t\t\t\t<SearchForm\n\t\t\t\t\tonFormSubmit={this.onSearchSubmit}\n\t\t\t\t\tonSearchValueChange={this.onSearchChange}\n\t\t\t\t\tsearchTermValue={this.state.searchTerm}\n\t\t\t\t\tisFetchingSlips={this.state.isFetchingSlips}\n\t\t\t\t\tonImFellingLucky={this.searchAdvice}\n\t\t\t\t/>\n\n\t\t\t\t{isFetchingSlips ? (\n\t\t\t\t\t<p className=\"isa_warning\">{'Searching for advice...'}</p>\n\t\t\t\t) : info ? (\n\t\t\t\t\t<p className=\"isa_info\">{info}</p>\n\t\t\t\t) : (\n\t\t\t\t\tthis.renderSlips()\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}